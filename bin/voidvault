#!/usr/bin/env perl6




use v6;
use Voidvault;
use Voidvault::Utils;




# -----------------------------------------------------------------------------
# gen-pass-hash
# -----------------------------------------------------------------------------

multi sub MAIN('gen-pass-hash', Str:D :p(:$pass)!, Bool :g(:$grub) --> Nil)
{
    say(Voidvault::Utils.gen-pass-hash($pass, :$grub));
}

multi sub MAIN('gen-pass-hash', Bool :g(:$grub) --> Nil)
{
    say(Voidvault::Utils.prompt-pass-hash(:$grub));
}




# -----------------------------------------------------------------------------
# help
# -----------------------------------------------------------------------------

multi sub MAIN('help', 'gen-pass-hash' --> Nil)
{
    USAGE('gen-pass-hash');
}

multi sub MAIN('help', 'ls' --> Nil)
{
    USAGE('ls');
}

multi sub MAIN('help', 'new' --> Nil)
{
    USAGE('new');
}

multi sub MAIN('help', $? --> Nil)
{
    USAGE();
}




# -----------------------------------------------------------------------------
# new
# -----------------------------------------------------------------------------

multi sub MAIN(
    'new',
    *%opts (
        Str :admin-name($),
        Str :admin-pass($),
        Str :admin-pass-hash($),
        Bool :augment($),
        Bool :disable-ipv6($),
        Str :disk-type($),
        Str :graphics($),
        Str :grub-name($),
        Str :grub-pass($),
        Str :grub-pass-hash($),
        Str :guest-name($),
        Str :guest-pass($),
        Str :guest-pass-hash($),
        Str :hostname($),
        Bool :ignore-conf-repos($),
        Str :keymap($),
        Str :locale($),
        Str :partition($),
        Str :pool-name($),
        Str :processor($),
        Str :repository($),
        Str :root-pass($),
        Str :root-pass-hash($),
        Str :sftp-name($),
        Str :sftp-pass($),
        Str :sftp-pass-hash($),
        Str :timezone($),
        Str :vault-name($),
        Str :vault-pass($)
    )
    --> Nil
)
{
    Voidvault.new(|%opts);
}




# -----------------------------------------------------------------------------
# ls
# -----------------------------------------------------------------------------

multi sub MAIN('ls', 'keymaps' --> Nil)
{
    Voidvault::Utils.ls-keymaps.map({ .say });
}

multi sub MAIN('ls', 'locales' --> Nil)
{
    Voidvault::Utils.ls-locales.map({ .say });
}

multi sub MAIN('ls', 'partitions' --> Nil)
{
    Voidvault::Utils.ls-partitions.map({ .say });
}

multi sub MAIN('ls', 'timezones' --> Nil)
{
    Voidvault::Utils.ls-timezones.map({ .say });
}




# -----------------------------------------------------------------------------
# version
# -----------------------------------------------------------------------------

multi sub MAIN(Bool:D :version($)! where .so --> Nil)
{
    printf("v%s\n", $Voidvault::VERSION);
    exit(0);
}




# -----------------------------------------------------------------------------
# usage
# -----------------------------------------------------------------------------

multi sub USAGE(--> Nil)
{
    constant $HELP = q:to/EOF/.trim;
    Usage:
      voidvault <command>

    Commands:
      gen-pass-hash        Generate password hash
      help                 Show help for subcommands
      ls                   List keymaps, locales, partitions, timezones
      new                  Bootstrap Void system with FDE

    Options:
      -h, --help
        Print this help message
      --version
        Print version and exit
    EOF
    say($HELP);
}

multi sub USAGE('gen-pass-hash' --> Nil)
{
    constant $HELP = q:to/EOF/.trim;
    Usage:
      voidvault [-g|--grub] [-p|--pass=<password>] gen-pass-hash

    Options:
      -g, --grub
        Generate PBKDF2 password hash for GRUB
      -p, --pass=<password>
        Plaintext password to generate hash from
    EOF
    say($HELP);
}

multi sub USAGE('ls' --> Nil)
{
    constant $HELP = q:to/EOF/.trim;
    Usage:
      voidvault ls <positional>

    Positionals
      keymaps           List available keyboard table descriptions
      locales           List available sets of language/cultural rules
      partitions        List available device paths
      timezones         List available geographic regions
    EOF
    say($HELP);
}

multi sub USAGE('new' --> Nil)
{
    constant $HELP = q:to/EOF/.trim;
    Usage:
      voidvault [--admin-name=<username>] [--admin-pass=<password>]
                [--guest-name=<username>] [--guest-pass=<password>]
                [--sftp-name=<username>] [--sftp-pass=<password>]
                [--grub-name=<username>] [--grub-pass=<password>]
                [--root-pass=<password>]
                [--vault-name=<vaultname>] [--vault-pass=<password>]
                [--pool-name=<poolname>]
                [--hostname=<hostname>] [--partition=<device>]
                [--processor=<processor>] [--graphics=<graphics>]
                [--disk-type=<disktype>] [--locale=<locale>]
                [--keymap=<keymap>] [--timezone=<timezone>]
                [--repository=<repository>] [--ignore-conf-repos]
                [--augment]
                [--disable-ipv6]
                new

    Options:
      --admin-name=<username>
        User name for admin account
      --admin-pass=<password>
        Password for admin account
      --admin-pass-hash=<passhash>
        Encrypted password hash for admin account
      --augment
        Drop to Bash console mid-execution
      --disable-ipv6
        Disable IPv6
      --disk-type=<disktype>
        Hard drive type
      --graphics=<graphics>
        Graphics card type
      --grub-name=<username>
        User name for GRUB
      --grub-pass=<password>
        Password for GRUB
      --grub-pass-hash=<passhash>
        Password hash for GRUB
      --guest-name=<username>
        User name for guest account
      --guest-pass=<password>
        Password for guest account
      --guest-pass-hash=<passhash>
        Encrypted password hash for guest account
      --hostname=<hostname>
        Hostname
      --ignore-conf-repos
        Only honor repositories specified on cmdline
      --keymap=<keymap>
        Keymap
      --locale=<locale>
        Locale
      --partition=<device>
        Partition target for install
      --pool-name=<poolname>
        Name for LVM volume group
      --processor=<processor>
        Processor type
      --repository=<repository>
        Location of Void package repository (prioritized)
      --root-pass=<password>
        Password for root account
      --root-pass-hash=<passhash>
        Encrypted password hash for root account
      --sftp-name=<username>
        User name for SFTP account
      --sftp-pass=<password>
        Password for SFTP account
      --sftp-pass-hash=<passhash>
        Encrypted password hash for SFTP account
      --timezone=<timezone>
        Timezone
      --vault-name=<vaultname>
        Name for LUKS encrypted volume
      --vault-pass=<password>
        Password for LUKS encrypted volume
    EOF
    say($HELP);
}

# vim: set filetype=perl6 foldmethod=marker foldlevel=0:
